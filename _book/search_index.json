[
["index.html", "Osburn Lab Protocols 1 | About", " Osburn Lab Protocols By Caitlin Casar Created: 2019-10-16 Last updated: 2019-10-18 1 | About This is a collection of protocols for the Osburn Lab ðŸ˜Ž Figure 1.1: Osburn Lab Spring 2019 "],
["data-access.html", " 2 | Data Access + Storage 2.1 MacOS Users 2.2 Windows Users", " 2 | Data Access + Storage Created: 2019-10-16 The Osburn Lab data is backed up to RDSS at Northwestern. You can access this data if you have permissions using the directions here. If you do not currently have access, you will need to be added as a user by Caitlin or Maggie. 2.1 MacOS Users Open Finder and navigate to Go &gt; Connect to Serverâ€¦ Add this server address: smb://resfiles.northwestern.edu/OSBURN_LAB Add your netID and password. Finder will automatically open OSBURNLAB in your system Volumes. To navigate to the OSBURNLAB dirctory in your terminal: cd /Volumes/OSBURN_LAB 2.2 Windows Users Open windows file explore and add this server address: resfiles.northwestern.edu You will be prompted for your user name (netID) and password. The contents of OSBURNLAB is displayed in the window. "],
["version-control.html", " 3 | Version Control", " 3 | Version Control Created: 2019-10-16 If youâ€™re writing code, itâ€™s very important to implement version control with Git. This guide will get you started! First youâ€™ll need to install Git. Next, create an account on Github. If you want access to provate repositories (i.e. if you need to backup unpublished data or code), be sure to set up a student account. Now, youâ€™ll need to set your credentials in Git. Open up your terminal. #set your user name on github git config --global user.name &quot;John Doe&quot; #set your user email on github git config --global user.email johndoe@example.com Now, go to Github and create a repository for your code. If you want this repository to be private, change the repo settings on Githib. Click on the settings button. Then set the reposotory to private. Then clone this repository to your computer. You may be prompted to enter your Github password. #change directories to the desired location for your repository cd ~/Desktop #clone your repository using the URL git clone https://github.com/OsburnLab/Protocols Now you can add your code files to this cloned repository. When youâ€™re done editing your code, push it up to the Github server. #add your new files to the queue git add . #commit your changes and add a short description git commit -a -m &quot;short description here&quot; #push your changes to the Github server git push "],
["create-a-protocol.html", " 4 | Create a Protocol", " 4 | Create a Protocol Created: 2019-10-16 Wanna share a cool protocol with your lab mates in this bookdown document? Follow this guide to learn how! First, youâ€™ll need to clone this repository using Git in your terminal. #change directories to a desirable location cd ~/Desktop git clone https://github.com/OsburnLab/Protocols Next, open the bookdown-demo.Rproj file in RStudio. Then, select File &gt; New File &gt; R Markdownâ€¦ Give this file a name in the format â€˜number-name.Rmdâ€™, where number is in sequential order with the other .Rmd files. Add an H1 element chapter title to the file. # | Chapter Title Next, add some paragraph content below this. # | Chapter Title Here is some paragraph content. To add a code chunk, equations, or figures, check out this link. When youâ€™re done editing the R markdown file, render the book. bookdown::render_book(&quot;index.rmd&quot;, &quot;bookdown::gitbook&quot;) Now itâ€™s time to update your changes online! #change directories to the protocols folder cd ~/Desktop/Protocols #add all new files you created git add. #commit all of your changes and add a short description about your update git commit -a -m &quot;short description here&quot; #push your changes to the github server git push #update the rendered html file on the github-hosted page cd _book git add . git commit -a -m &quot;short description here&quot; git push "]
]
